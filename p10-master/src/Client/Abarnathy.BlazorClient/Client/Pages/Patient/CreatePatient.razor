@using Abarnathy.BlazorClient.Client.Shared.Components
@using Abarnathy.BlazorClient.Client.Shared.Components.FormWizard
@using Abarnathy.BlazorClient.Client.Models
@page "/Patient/Create"
@page "/Patient/Edit/{PatientId}"

<div class="container">

<div class="row d-flex justify-content-center">
    <h2 class="mb-4 mt-4">Create</h2>
</div>

@if (OperationStatus == APIOperationStatus.Initial || OperationStatus == APIOperationStatus.GET_Success)
{
    <EditForm EditContext="@PatientEditContext">

        <DataAnnotationsValidator/>

        <div class="form-row d-flex justify-content-center">

            <div class="col-4">
                <div class="form-group">
                    <label for="given-name-input">Given Name</label>
                    <InputText id="given-name-input" @bind-Value="@PatientModel.GivenName" placeholder="Given Name" class="form-control"/>
                    <ValidationMessage For="@(() => PatientModel.GivenName)" class="text-danger"/>
                </div>
            </div>
            <div class="col-4">
                <div class="form-group">
                    <label for="family-name-input">Family Name</label>
                    <InputText id="family-name-input" @bind-Value="@PatientModel.FamilyName" placeholder="Family Name" class="form-control"/>
                    <ValidationMessage For="@(() => PatientModel.FamilyName)" class="text-danger"/>
                </div>
            </div>

        </div>

        <div class="form-row d-flex justify-content-center">

            <div class="col-4">
                <div class="form-group">
                    <label for="date-of-birth-input">Date of Birth</label>
                    <InputDate id="date-of-birth-input" @bind-Value="@PatientModel.DateOfBirth" placeholder="DD/MM/YYYY" class="form-control" aria-describedby="date-of-birth-input-help"/>
                    <ValidationMessage For="@(() => PatientModel.DateOfBirth)" class="text-danger"/>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    <label for="sex-input">Sex</label>
                    <InputSelect id="sex-input" @bind-Value="@PatientModel.Sex" class="form-control" placeholder="Aasdasd">
                        <option value="@SexEnum.Default" disabled>Please choose an option...</option>
                        <option value="@SexEnum.Male">Male</option>
                        <option value="@SexEnum.Female">Female</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => PatientModel.Sex)" class="text-danger"/>
                </div>
            </div>

        </div>
    </EditForm>

    <div class="form-row d-flex justify-content-center">

        <div class="col-4">
            <EditForm EditContext="@PhoneNumberEditContext">

                <DataAnnotationsValidator/>

                <div class="form-group">
                    <label for="phone-number-input">Telephone Number</label>
                    <div class="input-group">
                        <InputText id="phone-number-input" @bind-Value="@PatientModel.PhoneNumbers.First().Number" placeholder="Ex. (123) 456-7890" class="form-control" aria-describedby="phone-number-input-help"/>
                    </div>
                    <ValidationMessage For="@(() => PatientModel.PhoneNumbers.First().Number)" class="text-danger"/>
                </div>

            </EditForm>
        </div>

        <div class="col-4 d-flex align-items-center">
            <small id="phone-number-input-help" class="text-muted">A phone number is optional, but must be in US format if provided.</small>
        </div>
    </div>

    <EditForm EditContext="@AddressEditContext">

        <DataAnnotationsValidator/>
        <div class="form-row d-flex justify-content-center">
            <div class="col-5">
                <div class="form-group">
                    <label for="street-name-input">Street Name</label>
                    <InputText id="street-name-input" @bind-Value="@PatientModel.Addresses.First().StreetName" placeholder="EG. Main Street" class="form-control"/>
                    <ValidationMessage For="@(() => PatientModel.Addresses.First().StreetName)" class="text-danger"/>
                </div>
            </div>

            <div class="col-3">
                <div class="form-group">
                    <label for="house-number-input">House Number</label>
                    <InputText id="house-number-input" @bind-Value="@PatientModel.Addresses.First().HouseNumber" placeholder="EG. 6A" class="form-control"/>
                    <ValidationMessage For="@(() => PatientModel.Addresses.First().HouseNumber)" class="text-danger"/>
                </div>
            </div>
        </div>

        <div class="form-row d-flex justify-content-center">

            <div class="col-3">
                <div class="form-group">
                    <label for="town-input">Town</label>
                    <InputText id="town-input" @bind-Value="@PatientModel.Addresses.First().Town" placeholder="EG. Amityville" class="form-control"/>
                    <ValidationMessage For="@(() => PatientModel.Addresses.First().Town)" class="text-danger"/>
                </div>
            </div>

            <div class="col-3">
                <div class="form-group">
                    <label for="state-input">State</label>
                    <InputText id="state-input" @bind-Value="@PatientModel.Addresses.First().State" placeholder="EG. Washington" class="form-control"/>
                    <ValidationMessage For="@(() => PatientModel.Addresses.First().State)" class="text-danger"/>
                </div>
            </div>

            <div class="col-2">
                <div class="form-group">
                    <label for="zip-code-input">ZIP Code</label>
                    <InputText id="zip-code-input" @bind-Value="@PatientModel.Addresses.First().ZipCode" placeholder="EG. 51210" class="form-control"/>
                    <ValidationMessage For="@(() => PatientModel.Addresses.First().ZipCode)" class="text-danger"/>
                </div>
            </div>

        </div>

    </EditForm>

    <div class="row d-flex justify-content-center mt-2 mb-5">

        <div class="col-4 d-flex justify-content-center">
            <button class="btn btn-danger"
                    @onclick="@Cancel">
                Cancel
            </button>
        </div>

        @if (Mode == ComponentMode.Create)
        {
            <div class="col-4 d-flex justify-content-center">
                <button class="@(FormValid ? "btn btn-success" : "btn btn-success disabled")"
                        disabled="@(!FormValid)"
                        @onclick="@SubmitCreate">
                    Submit
                </button>
            </div>
        }
        else
        {
            <div class="col-4 d-flex justify-content-center">
                <button class="@(FormValid ? "btn btn-success" : "btn btn-success disabled")"
                        disabled="@(!FormValid)"
                        @onclick="@SubmitUpdate">
                    Update
                </button>
            </div>
        }

    </div>
}

@if (OperationStatus == APIOperationStatus.GET_Pending ||
     OperationStatus == APIOperationStatus.POST_Pending ||
     OperationStatus == APIOperationStatus.PUT_Pending)
{
    <div class="row">
        <div class="col-12 d-flex justify-content-center mb-2">
            <div id="loading"></div>
        </div>
    </div>
}

@if (OperationStatus == APIOperationStatus.POST_Success || OperationStatus == APIOperationStatus.PUT_Success)
{
    <div class="row">
        <div class="col-12 d-flex justify-content-center mb-2">
            <h3>Success!</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-12 d-flex justify-content-center">
            <p class="text-info">We'll redirect you in a second.</p>
        </div>
    </div>
}

@if (OperationStatus == APIOperationStatus.POST_Error || OperationStatus == APIOperationStatus.PUT_Error || OperationStatus == APIOperationStatus.POST_Error)
{
    <div class="row">
        <div class="col-12 d-flex justify-content-center mb-2">
            <h3>Error</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-12 d-flex justify-content-center">
            <p class="text-danger">An error has occurred.</p>
        </div>
    </div>
}

</div>